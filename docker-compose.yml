version: "3.8"

services:
  nginx:
    image: nginx:alpine
    ports:
      - "8083:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    networks:
      - network_public
  
  api:
      build: .
      ports:
        - "8080:8080"
      env_file: .env
      environment:
        DATABASE_URL: ${DATABASE_URL}
        S3_ENDPOINT: ${S3_ENDPOINT}
        S3_ACCESS_KEY: ${S3_ACCESS_KEY}
        S3_SECRET_KEY: ${S3_SECRET_KEY}
        S3_REGION: ${S3_REGION}
        S3_BUCKET: ${S3_BUCKET}
        SECRET_JWT: ${SECRET_JWT}
        OPENAI_API_KEY: ${OPENAI_API_KEY}
      restart: unless-stopped
      depends_on:
        db:
          condition: service_healthy
        s3:
          condition: service_healthy
      networks:
        - network_public

  db:
      image: mysql:8.0
      restart: always
      ports:
      - "3309:3306"
      env_file: .env
      environment:
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_DATABASE: ${DB_NAME}
      volumes:
        - db_data:/var/lib/mysql
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        interval: 5s
        retries: 10
      networks:
      - network_public

  create-bucket:
      image: minio/mc:latest
      depends_on:
        - s3
      entrypoint: >
        /bin/sh -c "
        sleep 10;
        mc alias set local http://s3:9000 minioadmin minioadmin;
        mc mb local/imagai;
        mc anonymous set public local/imagai;
        mc anonymous set download local/imagai;
        exit 0;
        "    
      networks:
      - network_public

  s3:
    image: minio/minio:latest
    container_name: s3
    ports:
      - "9000:9000"     # S3 API
      - "9001:9001"     # MinIO console (optional)
    command: server /data --console-address ":9001"
    env_file: .env
    environment:
        MINIO_ROOT_USER: ${S3_ACCESS_KEY}
        MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
        MINIO_REGION_NAME: ${S3_REGION}
    networks:
      - network_public
    volumes:
      - ./data/minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    

volumes:
  db_data:
    name: db_data

  
networks:
  network_public:
    name: network_public
